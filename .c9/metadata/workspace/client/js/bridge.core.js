{"changed":true,"filter":false,"title":"bridge.core.js","tooltip":"/client/js/bridge.core.js","value":"/**\n * choish\n */\n(function(){\n    \n    var root = this;\n    \n    var Bridge = root.Bridge = {};\n    \n    var log = root.log = function(str) {\n        //console.log(str);\n    };\n    \n    var push             = Array.prototype.push,\n        slice            = Array.prototype.slice;\n    \n    var extend, result, clone, isObject, isNumber, isString, isDate, isEmpty, each;\n\n    // underscore.jsがある場合 underscoreを使用するようにする\n    if (root._) {\n        var _ = root._;\n        extend = Bridge.extend = _.extend;\n        // templateSettings = _.templateSettings;\n        //tmpl = Bridge.tmpl = _.template;\n        //tmpl = Bridge.tmpl = template;\n        //tmplTool = Bridge.tmplTool = tmplTool;\n\n        result = Bridge.result = _.result;\n        clone = Bridge.clone = _.clone;\n        isObject = Bridge.isObject = _.isObject;\n        isNumber = Bridge.isNumber = _.isNumber;\n        isString = Bridge.isString = _.isString;\n        isDate = Bridge.isDate = _.isDate;\n        isEmpty = Bridge.isEmpty = _.isEmpty;\n        \n        each = Bridge.each = _.each;\n    }\n\n\n\n    // When customizing `templateSettings`, if you don't want to define an\n    // interpolation, evaluation or escaping regex, we need one that is\n    // guaranteed not to match.\n    var noMatch = /(.)^/;\n\n    // Certain characters need to be escaped so that they can be put into a\n    // string literal.\n    var escapes = {\n        \"'\":      \"'\",\n        '\\\\':     '\\\\',\n        '\\r':     'r',\n        '\\n':     'n',\n        '\\t':     't',\n        '\\u2028': 'u2028',\n        '\\u2029': 'u2029'\n    };\n\n    var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n    \n    \n    Bridge.templateSettings = {\n            evaluate    : /##([\\s\\S]+?)##/g,\n            interpolate : /##=([\\s\\S]+?)##/g,\n            escape      : /##-([\\s\\S]+?)##/g,\n            func        : /##:([\\s\\S]+?)##/g,\n            include    : /##@([\\s\\S]+?)##/g,\n            variable: 'data'\n    };\n    \n    \n    var templateParser = function(text, settings) {\n        settings = _.defaults({}, settings, Bridge.templateSettings);\n    \n        // Combine delimiters into one regular expression via alternation.\n        var matcher = new RegExp([\n          (settings.escape || noMatch).source,\n          (settings.interpolate || noMatch).source,\n          (settings.func || noMatch).source,\n          (settings.include || noMatch).source,\n          (settings.evaluate || noMatch).source,\n        ].join('|') + '|$', 'g');\n    \n        // Compile the template source, escaping string literals appropriately.\n        var index = 0;\n        var source = \"\";\n        window.funcArray = {};\n        window.funcIdCount = 0;\n        text.replace(matcher, function(match, escape, interpolate, func, include, evaluate, offset) {\n            source += text.slice(index, offset).replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n            if (escape) {\n                source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n            }\n            if (interpolate) {\n                source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n            }\n            if (func) {\n                source += \"';\\nvar funcId = (funcIdCount++);\\n__p+='\";\n                source += \"'+\\nfuncId\\n'\";\n                var funcArray = func.split('::');\n                source += \"';\\nfuncArray[funcId] = {func: \" + funcArray[0] + \", data: \" + (funcArray[1] || 'this') + \"};\\n__p+='\";\n            }\n            if (evaluate) {\n                source += \"';\\n\" + evaluate + \"\\n__p+='\";\n            }\n            if (include) {\n                source += \"';\\n__p+='\" + new Function('return ' + include).call(this);\n            }\n            index = offset + match.length;\n            return match;\n        });\n        return source;\n    }\n    \n    // JavaScript micro-templating, similar to John Resig's implementation.\n    // Underscore templating handles arbitrary delimiters, preserves whitespace,\n    // and correctly escapes quotes within interpolated code.\n    var template = Bridge.template = function($area, text, data, settings) {\n        settings = _.defaults({}, settings, Bridge.templateSettings);\n        var render = null;\n        var source = \"__p+='\";\n        source += templateParser(text, settings);\n        source += \"';\\n\";\n    \n        // If a variable is not specified, place data values in local scope.\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n    \n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\n            \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n            source + \"return __p;\\n\";\n    \n        try {\n            render = new Function(settings.variable || 'obj', '_', source);\n        } catch (e) {\n            e.source = source;\n            throw e;\n        }\n\n        if (data) {\n            var html = render.call(data, data, _);\n            //$area.html($(html));\n            $area[0].innerHTML = html;\n            $.each(funcArray, function(key, obj) {\n                var $element = $area.find('[data-event=\"' + key + '\"]');\n                $.each(obj.func, function(eventId, eventFunc) {\n                    $element.on(eventId, obj.data, eventFunc);\n                });\n            });\n            return $area;\n        }\n        \n        var template = function(data, element) {\n            var html = render.call(data, data, _);\n            //var $html = $(html);\n            try {\n                if (element) {\n                    //$(element).html($html);\n                    element.innerHTML = html;\n                    $area = $(element);\n                } else {\n                    //$area.html($html);\n                    $area[0].innerHTML = html;\n                }\n            } catch(e) {\n                console.log(e);\n            }\n            \n            //$area[0].innerHTML = html;\n            $.each(funcArray, function(key, obj) {\n                var $element = $area.find('[data-event=\"' + key + '\"]');\n                $.each(obj.func, function(eventId, eventFunc) {\n                    $element.on(eventId, obj.data, function(e) {\n                        RouterTool.capture(eventFunc, e);\n                    });\n                });\n            });\n            return $area;\n        };\n\n        // Provide the compiled function source as a convenience for precompilation.\n        template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n        return template;\n    };\n    \n    \n    var tmplTool = Bridge.tmplTool =  {\n        cache: {},\n        addTmpl: function(obj) {\n            var tmpl = this;\n            if (obj instanceof jQuery) {\n                obj.each(function(ind, ele) {\n                    var tmpl_id = ele.dataset['tmplId'];\n                    var tmpl_option = JSON.parse(ele.dataset['tmplOption'] || '{}');\n                    var $tmpl_container = $('[data-bind-tmpl-id=\"' + tmpl_id + '\"], #' + tmpl_id);\n                    var render = tmpl.cache[tmpl_id] = template($tmpl_container, ele.innerHTML);//ele.innerHTML);\n                    if ($tmpl_container[0]) {\n                        $tmpl_container[0].innerHTML = '';\n                    }\n                    if (tmpl_option.render) {\n                        render(tmpl_option.data || {});\n                    }\n                });\n            } else {\n                /*\n                $.get(obj, function(html) {\n                        tmpl.addTmpl($(html).find('.br-tmpl'));\n                    }\n                );\n                */\n                $.ajax({\n                    url: obj,\n                    success: function(html) {\n                        tmpl.addTmpl($(html).find('[data-tmpl-id]'));\n                    },\n                    dataType: 'text',\n                    //async: false,\n                    cache: true\n                });\n            }\n            return this;\n        },\n        \n        render: function(tmplKey, data, callback, route) {\n            var tmplKeys = tmplKey.split('::');\n            var route = route || true;\n            var ele = document.getElementById(tmplKeys[1] || tmplKeys[0])\n            //ele.innerHTML = Bridge.tmpl($('#' + tmplKey), tmplTool.cache[tmplKey], data);\n\n            if (route) {\n                RouterTool.add(tmplKey, data);\n            }\n\n            var $html = tmplTool.cache[tmplKeys[0]](data, ele);\n            \n            if (callback) {\n                callback(data, $html);\n            }\n            return $html;\n        },\n        bindTmpl: function(obj) {\n            if (obj instanceof jQuery) {\n                obj.each(function(ind, ele) {\n                    var bindTmplId = ele.dataset['bindTmplId'];\n                    var tmplSrc = ele.dataset['tmplSrc'];\n                    if (tmplSrc) {\n                        //tmplTool.addTmpl(tmplSrc);\n                        \n                        $.ajax({\n                            url: tmplSrc,\n                            success: function(html) {\n                                var $html = $(html);\n                                var $ele = $(ele);\n                                var eleHtml = ele.innerHTML;\n                                ele.innerHTML = $html.find('[data-tmpl-id=\"' + bindTmplId + '\"]').add($html.filter('[data-tmpl-id=\"' + bindTmplId + '\"]')).html();\n                                $ele.find('content').replaceWith(eleHtml);\n                                tmplTool.addTmpl($ele.find('[data-tmpl-id]').add($ele.filter('[data-tmpl-id]')));\n                            },\n                            dataType: 'text',\n                            async: false,\n                            cache: true\n                        });\n                    }\n\n                });\n            } else {\n                \n            }\n        },\n        include: function(tmplSrc, tmplId) {\n            var html = $.ajax({\n                url: tmplSrc,\n                /*\n                success: function(html) {\n                    var $html = $(html);\n                    return $html.find('[data-tmpl-id=\"' + tmplId + '\"]').add($html.filter('[data-tmpl-id=\"' + tmplId + '\"]')).html();\n                    //tmplTool.addTmpl($ele.find('[data-tmpl-id]').add($ele.filter('[data-tmpl-id]')));\n                },\n                */\n                dataType: 'text',\n                async: false,\n                cache: true\n            }).responseText;\n            var $html = $(html);\n            return templateParser($html.find('[data-tmpl-id=\"' + tmplId + '\"]').add($html.filter('[data-tmpl-id=\"' + tmplId + '\"]')).html());\n        },\n        editor: function($html, config) {\n            config = config || {};\n            var inputObjList = [];\n            var data = {};\n            var inputConfig = null;\n            var inputObj = null;\n            $html.find(':input[name]').each(function(ind, input) {\n                inputConfig = config[input.name] || {};\n                if (input.type == \"radio\" && !input.checked) {\n                    return;\n                }\n                inputObj = {\n                    target: input,\n                    name: input.name,\n                    validateTool: inputConfig.validateTool || config.validateTool || Bridge.validateTool,\n                    validateRule: inputConfig.validateRule,\n                    \n                    val: inputConfig.val || config.val || function () {\n                        var target = this.target;\n                        if (target.type == \"checkbox\") {\n                            return target.checked ? (target.value || true) : (target.value ? '' : false);\n                        } else if (target.type == \"radio\") {\n                            return target.checked ? (target.value || true) : null;\n                        }\n                        return target.value;\n                    },\n                    clearError: inputConfig.clearError || config.clearError || function() {\n                        \n                    },\n                    renderMessage: inputConfig.renderMessage || config.renderMessage ||  function(strArray) {\n                        alert(strArray.join('\\n'));\n                    },\n                    validate: inputConfig.validate || config.validate || function() {\n                        if (!this.validateTool || !this.validateRule) {\n                            return true;\n                        }\n                        \n                        this.clearError();\n                        \n                        var messages = [];\n                        var message = null;\n                        //var result\n                        for (var ruleName in this.validateRule) {\n                            if (!this.validateTool[ruleName]) {\n                                continue;\n                            }\n                            message = this.validateTool[ruleName].call(this, {label : this.validateRule.label}, this.val(), this.validateRule[ruleName]);\n                            if (message) {\n                                messages.push(message);\n                            }\n                        }\n                        \n                        if (messages.length !== 0) {\n                            this.renderMessage(messages);\n                            return false;\n                        }\n                        return true;\n                    }\n                };\n                inputObjList.push(inputObj);\n                data[inputObj.name] = inputObj.val();\n            });\n            \n            return {\n                $obj: $html,\n                inputObjList: inputObjList,\n                data: data,\n                oldData: {},\n                flashData: function() {\n                    this.oldData = this.data;\n                    this.data = {};\n                    var inputObj = null;\n                    for (var ind in this.inputObjList) {\n                        inputObj = this.inputObjList[ind];\n                        this.data[inputObj.name] = inputObj.val();\n                    }\n                    return this.data;\n                },\n                \n                validate: function() {\n                    var result = true;\n                    var inputObj = null;\n                    for (var ind in this.inputObjList) {\n                        inputObj = this.inputObjList[ind];\n                        if (inputObj.validate) {\n                            result = inputObj.validate() && result;\n                        }\n                    }\n                    return result;\n                }\n            };\n        },\n        \n        resetAll : function(initData) {\n            initData = initData || {};\n            for (var key in this.cache) {\n                this.cache[key](initData[key] ? initData[key] : {});\n            }\n        },\n\t\t\n\t\treset : function(initData) {\n            for (var key in initData) {\n\t\t\t\tif (initData[key] == null) {\n\t\t\t\t\tdocument.getElementById(key).innerHTML = '';\n\t\t\t\t} else {\n\t\t\t\t\tthis.cache[key](initData[key] ? initData[key] : {});\n\t\t\t\t}\n            }\n\t\t}\n        \n    };\n\n\n    var RouterTool = Bridge.RouterTool = {\n        history : {},\n        temp: {},\n        init: function() {\n            this.add = function(id, data) {\n                RouterTool.temp[id] = data;\n            }\n            \n            this.capture = function(func, event) {\n                //RouterTool.RTL = true;\n                RouterTool.temp = {};\n                func(event);\n                var state = new Date().getTime();\n                window.history.pushState(state, null);\n                RouterTool.history[state] = RouterTool.temp;\n                //RouterTool.RTL = false;\n            }\n            \n            var route = this;\n            /*\n            var history = localStorage.br_history ? JSON.parse(localStorage.br_history) : {};\n            if (!history[location.hash]) {\n                history[location.hash] = {};\n            }\n            */\n            //hashchange\n            \n            window.addEventListener('popstate', function(event) {\n                // コンテンツを操作するコード\n                var state = event.state; // stateオブジェクト\n            //});\n            //$(window).on('popstate', function(event) {\n                \n                if (!state) {\n                    return; // 初回アクセス時対策\n                }\n                \n                var tempDatas = RouterTool.history[state];\n                \n                $.each(tempDatas, function (key, data) {\n                    Bridge.tmplTool.render(key, data, null, false);\n                })\n                \n                \n                /*\n                if (Object.keys(route.temp).length > 0) {\n                    history[location.hash] = route.temp;\n                    localStorage.br_history = JSON.stringify(history);\n                    route.temp = {};\n                } else {\n                    RouterTool.historyBack();\n                }\n                */\n            });\n            //$(window).trigger('popstate');\n        },\n        add: function(id, data) {\n            \n        },\n        capture: function(func, event) {\n            func(event);\n        },\n        historyBack: function() {\n            /*\n            var history = localStorage.br_history ? JSON.parse(localStorage.br_history) : {};\n            if (!history[location.hash]) {\n                history[location.hash] = {};\n            }\n            $.each(history[location.hash], function(id, data) {\n                tmplTool.render(id, data);\n            });\n            */\n        }\n    };\n    \n    var localStorageTool = Bridge.localStorageTool = {\n        push: function(key, data) {\n            localStorage[key] = JSON.stringify(data);\n        },\n        get: function(key) {\n            try {\n                return JSON.parse(localStorage[key] || null);\n            } catch(e) {\n                return null;\n            }\n        }\n    };\n\n    var sessionStorageTool = Bridge.sessionStorageTool = {\n        push: function(key, data) {\n            sessionStorage[key] = JSON.stringify(data);\n        },\n        get: function(key) {\n            try {\n                return JSON.parse(sessionStorage[key] || null);\n            } catch(e) {\n                return null;\n            }\n            \n        }\n    };\n    \n    \n    /**\n     * jsonの場合子も拡張する\n     */\n    var extendObj = function(obj) {\n        obj = obj || {};\n        each(slice.call(arguments, 1), function(source) {\n            if (source) {\n                for (var prop in source) {\n                    if (isObject(obj[prop]) && source[prop]) {\n                        extendObj(obj[prop], source[prop]);\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        });\n        return obj;\n    };\n    \n    /** 基本メッセージ表示方法 */\n    var msg = Bridge.msg = function(msg) {\n        alert(msg);\n    };\n\n\n    var fileUpload = Bridge.fileUpload = function(url, fileObj, callBack){\n        $.ajax(url, {\n            type: 'post',\n            processData: false,\n            contentType: false,\n            data: fileObj,\n            dataType: 'html',\n            success: callBack\n        });\n    };\n    \n    Bridge.dataType = \"mysql\";\n    Bridge.dataTypeMap = {\n        mysql : {\n            VARCHAR : \"String\",\n            INT : \"Number\",\n            TINYINT : \"Number\",\n            DECIMAL : \"Number\",\n            DATETIME : \"Date\",\n            DATE : \"Date\"\n        },\n        oracle : {\n            \n        },\n        mssql : {\n            \n        }\n    };\n    \n    var dataTypeConvert = Bridge.dataTypeConvert = function(fieldMap, dataTypeMap) {\n        var typeName = null;\n        dataTypeMap = dataTypeMap || Bridge.dataTypeMap[Bridge.dataType];\n        for (var name in fieldMap) {\n            typeName = fieldMap[name].typeName;\n            fieldMap[name].typeName = dataTypeMap[typeName] || 'String';\n        }\n    };\n    \n    \n    var validateTool = Bridge.validateTool = {\n        isNullAble : function(messageObj, value, sw) {\n            if (!sw && !value) {\n                // messageObj.message.push(\"必須項目です。\");\n                return \"必須項目です。\";\n            }\n            return; \n        },\n        \n        patterns : {\n            Digits: {patten : /^\\d+$/, message : \"数字のみ入力してください。\"},\n            Email: {patten : /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i,\n                    message : \"メールアドレスを入力してください。\"},\n            Number: {patten : /^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)(?:\\.\\d+)?$/,\n                     message : \"数字のみ入力してください。\"},\n            // Date :\n        },\n        \n        typeName : function(messageObj, value, type) {\n            if (!value || this.type != 'text' || type == \"String\") {\n                return;\n            }\n            \n            if (type == \"isDate\") {\n                if (isNaN(new Date(value))) {\n                    return  \"日付の入力が正しくありません。\";\n                }\n                return;\n            }\n            \n            if (!value.toString().match(this.validateTool.patterns[type].patten)) {\n                return this.validateTool.patterns[type].message;\n            }\n            return;\n        },\n        size : function(messageObj, value, size) {\n            if (!size || size < 1 || !value) {\n                return;\n            } else if (value.toString().length > size) {\n                // messageObj.message.push(\"サイズを超えました。\");\n                return \"サイズを超えました。\";\n            }\n            return;\n        }\n    };\n    \n\n    /** サーバーとの通信を担当 */\n    var Connector = Bridge.Connector = function(config) {\n        this.config = config || {};\n        this.dataName = config.dataName || Bridge.dataName;\n        this.url = config.url || Bridge.url ||\"/bridge\";\n        this.idName = config.idName || Bridge.idName || \"id\";\n        this.baseParm = config.baseParm;\n        \n        if (config.hasError) {\n            this.hasError = config.hasError;\n        }\n        \n        this.beforeFunc = config.beforeFunc;\n        this.afterFunc = config.afterFunc;\n        \n        this.queueData = [];\n    };\n    \n    extend(Bridge.Connector.prototype, {\n        \n        addId : function (obj, id) {\n            obj[this.idName] = id;\n            return obj;\n        },\n        \n        /** 既存作業を初期化 */\n        reset : function() {\n            this.queueData.length = 0;\n            this.dataName = this.config.dataName || Bridge.dataName;\n            return this;\n        },\n        hasError : function() {\n          return false;  \n        },\n        request : function(callBack) {\n            var conn = this;\n            $.post(this.url, {req : this.queueData}, function (data, textStatus, jqXHR) {\n                if (conn.beforeFunc && !conn.beforeFunc(data, textStatus, jqXHR)) {\n                    return false;\n                }\n                \n                if (conn.hasError(data, textStatus, jqXHR)) {\n                    return false;\n                }\n                \n                callBack(data, textStatus, jqXHR);\n                if (conn.afterFunc) {\n                    conn.afterFunc(data, textStatus, jqXHR);\n                }\n            }, \"json\");\n            \n            this.reset();\n        },\n\n        dataName :function(dataName) {\n            this.dataName = dataName;\n        },\n        \n        combine : function (data) {\n            this.queueData.push(JSON.stringify(extend(data, {\"dataName\" : this.dataName}, this.baseParm)));\n        },\n        \n        /** メタ情報要求 */\n        reqMetaData : function(key) {\n            this.combine({\n                \"key\" : key,\n                \"method\" : \"reqMetaData\"\n            });\n            return this;\n        },\n        /** 一つのデートのみ要求（あくまでインタペース的な意味） */\n        reqData : function (key, id, query) {\n            query = query || {};\n            this.combine(extend(this.addId({\n                \"key\" : key,\n                \"method\" : \"reqData\",\n                \"parm\" : query,\n            }, id)));\n            return this;\n        },\n        reqList : function (key, query, option) {\n            query = query || {};\n            //option = option || {};\n            this.combine({\n                \"key\" : key,\n                \"method\" : \"reqList\",\n                \"parm\" : query,\n                \"option\": option\n            });\n            return this;\n        },\n        reqCount : function (key, query) {\n            query = query || {};\n            //option = option || {};\n            this.combine({\n                \"key\" : key,\n                \"method\" : \"reqCount\",\n                \"parm\" : query\n            });\n            return this;\n        },\n        reqDistinct : function (key, field, query) {\n            query = query || {};\n            //option = option || {};\n            this.combine({\n                \"key\" : key,\n                \"method\" : \"reqDistinct\",\n                \"field\" : field,\n                \"parm\" : query\n            });\n            return this;\n        },\n        reqMovePage : function (key, query) {\n            query = query || {};\n            this.combine({\n                \"key\" : key,\n                \"method\" : \"reqMovePage\",\n                \"parm\" : query,\n            });\n            return this;\n        },\n        reqInsert : function (key, data) {\n            this.combine({\n                \"key\" : key,\n                \"method\" : \"reqInsert\",\n                \"data\" : data\n            });\n            return this;\n        },\n        reqUpdate : function (key, id, data) {\n            this.combine({\n                \"key\" : key,\n                \"method\" : \"reqUpdate\",\n                \"data\" : this.addId(data, id)\n            });\n            return this;\n        },\n        reqSave : function (key, data) {\n            this.combine(extend({\n                \"key\" : key,\n                \"method\" : \"reqSave\",\n                \"data\" : data\n            }));\n            return this;\n        },\n        reqDelete : function (key, id) {\n            this.combine(this.addId({\n                \"key\" : key,\n                \"method\" : \"reqDelete\"\n            }, id));\n            return this;\n        },\n        reqExecMethod : function (key, method, data) {\n            this.combine({\n                \"key\" : key,\n                \"method\" : method,\n                \"data\" : data\n            });\n            return this;\n        },\n    });\n    \n    \n    \n    // backbone extend\n    // Helpers\n    // -------\n    \n    // Helper function to correctly set up the prototype chain, for subclasses.\n    // Similar to `goog.inherits`, but uses a hash of prototype properties and\n    // class properties to be extended.\n    var extendObject = Bridge.extendObject = function(protoProps, staticProps) {\n        var parent = this;\n        var child;\n\n        // The constructor function for the new subclass is either defined by\n        // you\n        // (the \"constructor\" property in your `extend` definition), or\n        // defaulted\n        // by us to simply call the parent's constructor.\n        if (protoProps && _.has(protoProps, 'constructor')) {\n          child = protoProps.constructor;\n        } else {\n          child = function(){ return parent.apply(this, arguments); };\n        }\n        \n        // Add static properties to the constructor function, if supplied.\n        _.extend(child, parent, staticProps);\n        \n        // Set the prototype chain to inherit from `parent`, without calling\n        // `parent`'s constructor function.\n        var Surrogate = function(){ this.constructor = child; };\n        Surrogate.prototype = parent.prototype;\n        child.prototype = new Surrogate;\n        \n        // Add prototype properties (instance properties) to the subclass,\n        // if supplied.\n        if (protoProps) _.extend(child.prototype, protoProps);\n        \n        // Set a convenience property in case the parent's prototype is needed\n        // later.\n        child.__super__ = parent.prototype;\n        \n        // child.prototype.super = parent.prototype;\n        \n        return child;\n    };\n\n    \n\n    \n}).call(this);","undoManager":{"stack":[[{"start":{"row":199,"column":32},"end":{"row":199,"column":33},"action":"insert","lines":["d"]}],[{"start":{"row":199,"column":33},"end":{"row":199,"column":34},"action":"insert","lines":["e"]}],[{"start":{"row":199,"column":34},"end":{"row":199,"column":35},"action":"insert","lines":["r"]}],[{"start":{"row":199,"column":35},"end":{"row":199,"column":37},"action":"insert","lines":["()"]}],[{"start":{"row":199,"column":37},"end":{"row":199,"column":38},"action":"insert","lines":[";"]}],[{"start":{"row":199,"column":36},"end":{"row":199,"column":38},"action":"insert","lines":["{}"]}],[{"start":{"row":199,"column":36},"end":{"row":199,"column":38},"action":"remove","lines":["{}"]},{"start":{"row":199,"column":36},"end":{"row":199,"column":47},"action":"insert","lines":["tmpl_option"]}],[{"start":{"row":199,"column":47},"end":{"row":199,"column":48},"action":"insert","lines":["."]}],[{"start":{"row":199,"column":48},"end":{"row":199,"column":49},"action":"insert","lines":["d"]}],[{"start":{"row":199,"column":49},"end":{"row":199,"column":50},"action":"insert","lines":["a"]}],[{"start":{"row":199,"column":50},"end":{"row":199,"column":51},"action":"insert","lines":["t"]}],[{"start":{"row":199,"column":51},"end":{"row":199,"column":52},"action":"insert","lines":["a"]}],[{"start":{"row":194,"column":24},"end":{"row":194,"column":25},"action":"insert","lines":["t"]}],[{"start":{"row":194,"column":25},"end":{"row":194,"column":26},"action":"insert","lines":["m"]}],[{"start":{"row":194,"column":26},"end":{"row":194,"column":27},"action":"insert","lines":["p"]}],[{"start":{"row":194,"column":27},"end":{"row":194,"column":28},"action":"remove","lines":["t"]}],[{"start":{"row":194,"column":27},"end":{"row":194,"column":28},"action":"insert","lines":["T"]}],[{"start":{"row":199,"column":24},"end":{"row":199,"column":28},"action":"remove","lines":["tmpl"]},{"start":{"row":199,"column":24},"end":{"row":199,"column":31},"action":"insert","lines":["tmpTmpl"]}],[{"start":{"row":199,"column":31},"end":{"row":199,"column":32},"action":"remove","lines":["."]}],[{"start":{"row":199,"column":30},"end":{"row":199,"column":31},"action":"remove","lines":["l"]}],[{"start":{"row":199,"column":29},"end":{"row":199,"column":30},"action":"remove","lines":["p"]}],[{"start":{"row":199,"column":28},"end":{"row":199,"column":29},"action":"remove","lines":["m"]}],[{"start":{"row":199,"column":27},"end":{"row":199,"column":28},"action":"remove","lines":["T"]}],[{"start":{"row":199,"column":26},"end":{"row":199,"column":27},"action":"remove","lines":["p"]}],[{"start":{"row":199,"column":25},"end":{"row":199,"column":26},"action":"remove","lines":["m"]}],[{"start":{"row":199,"column":24},"end":{"row":199,"column":25},"action":"remove","lines":["t"]}],[{"start":{"row":194,"column":24},"end":{"row":194,"column":31},"action":"remove","lines":["tmpTmpl"]},{"start":{"row":194,"column":24},"end":{"row":194,"column":30},"action":"insert","lines":["render"]}],[{"start":{"row":199,"column":47},"end":{"row":199,"column":48},"action":"insert","lines":[","]}],[{"start":{"row":199,"column":48},"end":{"row":199,"column":49},"action":"insert","lines":[" "]}],[{"start":{"row":199,"column":49},"end":{"row":199,"column":64},"action":"insert","lines":["$tmpl_container"]}],[{"start":{"row":199,"column":64},"end":{"row":199,"column":66},"action":"insert","lines":["[]"]}],[{"start":{"row":199,"column":65},"end":{"row":199,"column":66},"action":"insert","lines":["0"]}],[{"start":{"row":199,"column":47},"end":{"row":199,"column":67},"action":"remove","lines":[", $tmpl_container[0]"]}],[{"start":{"row":199,"column":47},"end":{"row":199,"column":48},"action":"insert","lines":[" "]}],[{"start":{"row":199,"column":48},"end":{"row":199,"column":49},"action":"insert","lines":["|"]}],[{"start":{"row":199,"column":49},"end":{"row":199,"column":50},"action":"insert","lines":["|"]}],[{"start":{"row":199,"column":50},"end":{"row":199,"column":51},"action":"insert","lines":[" "]}],[{"start":{"row":199,"column":51},"end":{"row":199,"column":53},"action":"insert","lines":["{}"]}],[{"start":{"row":98,"column":42},"end":{"row":99,"column":0},"action":"insert","lines":["",""]},{"start":{"row":99,"column":0},"end":{"row":99,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":99,"column":16},"end":{"row":99,"column":17},"action":"insert","lines":["i"]}],[{"start":{"row":99,"column":17},"end":{"row":99,"column":18},"action":"insert","lines":["f"]}],[{"start":{"row":99,"column":18},"end":{"row":99,"column":19},"action":"insert","lines":[" "]}],[{"start":{"row":99,"column":18},"end":{"row":99,"column":19},"action":"remove","lines":[" "]}],[{"start":{"row":99,"column":17},"end":{"row":99,"column":18},"action":"remove","lines":["f"]}],[{"start":{"row":99,"column":16},"end":{"row":99,"column":17},"action":"remove","lines":["i"]}],[{"start":{"row":99,"column":16},"end":{"row":99,"column":17},"action":"insert","lines":["f"]}],[{"start":{"row":99,"column":17},"end":{"row":99,"column":18},"action":"insert","lines":["u"]}],[{"start":{"row":99,"column":18},"end":{"row":99,"column":19},"action":"insert","lines":["n"]}],[{"start":{"row":99,"column":19},"end":{"row":99,"column":20},"action":"insert","lines":["c"]}],[{"start":{"row":99,"column":20},"end":{"row":99,"column":21},"action":"insert","lines":["."]}],[{"start":{"row":99,"column":21},"end":{"row":99,"column":22},"action":"insert","lines":["s"]}],[{"start":{"row":99,"column":22},"end":{"row":99,"column":23},"action":"insert","lines":["p"]}],[{"start":{"row":99,"column":23},"end":{"row":99,"column":24},"action":"insert","lines":["l"]}],[{"start":{"row":99,"column":24},"end":{"row":99,"column":25},"action":"insert","lines":["i"]}],[{"start":{"row":99,"column":25},"end":{"row":99,"column":26},"action":"insert","lines":["t"]}],[{"start":{"row":99,"column":26},"end":{"row":99,"column":28},"action":"insert","lines":["()"]}],[{"start":{"row":99,"column":28},"end":{"row":99,"column":29},"action":"insert","lines":[";"]}],[{"start":{"row":99,"column":27},"end":{"row":99,"column":29},"action":"insert","lines":["''"]}],[{"start":{"row":99,"column":28},"end":{"row":99,"column":29},"action":"insert","lines":[":"]}],[{"start":{"row":99,"column":29},"end":{"row":99,"column":30},"action":"insert","lines":[":"]}],[{"start":{"row":99,"column":16},"end":{"row":99,"column":17},"action":"insert","lines":["v"]}],[{"start":{"row":99,"column":17},"end":{"row":99,"column":18},"action":"insert","lines":["a"]}],[{"start":{"row":99,"column":18},"end":{"row":99,"column":19},"action":"insert","lines":["r"]}],[{"start":{"row":99,"column":19},"end":{"row":99,"column":20},"action":"insert","lines":[" "]}],[{"start":{"row":99,"column":20},"end":{"row":99,"column":21},"action":"insert","lines":["f"]}],[{"start":{"row":99,"column":21},"end":{"row":99,"column":22},"action":"insert","lines":["u"]}],[{"start":{"row":99,"column":22},"end":{"row":99,"column":23},"action":"insert","lines":["n"]}],[{"start":{"row":99,"column":23},"end":{"row":99,"column":24},"action":"insert","lines":["c"]}],[{"start":{"row":99,"column":24},"end":{"row":99,"column":25},"action":"insert","lines":["A"]}],[{"start":{"row":99,"column":25},"end":{"row":99,"column":26},"action":"insert","lines":["r"]}],[{"start":{"row":99,"column":26},"end":{"row":99,"column":27},"action":"insert","lines":["r"]}],[{"start":{"row":99,"column":27},"end":{"row":99,"column":28},"action":"insert","lines":["a"]}],[{"start":{"row":99,"column":28},"end":{"row":99,"column":29},"action":"insert","lines":["y"]}],[{"start":{"row":99,"column":29},"end":{"row":99,"column":30},"action":"insert","lines":[" "]}],[{"start":{"row":99,"column":30},"end":{"row":99,"column":31},"action":"insert","lines":["="]}],[{"start":{"row":99,"column":31},"end":{"row":99,"column":32},"action":"insert","lines":[" "]}],[{"start":{"row":100,"column":62},"end":{"row":100,"column":66},"action":"remove","lines":["func"]},{"start":{"row":100,"column":62},"end":{"row":100,"column":71},"action":"insert","lines":["funcArray"]}],[{"start":{"row":100,"column":71},"end":{"row":100,"column":73},"action":"insert","lines":["[]"]}],[{"start":{"row":100,"column":72},"end":{"row":100,"column":73},"action":"insert","lines":["0"]}],[{"start":{"row":100,"column":86},"end":{"row":100,"column":90},"action":"remove","lines":["this"]},{"start":{"row":100,"column":86},"end":{"row":100,"column":87},"action":"insert","lines":["\""]}],[{"start":{"row":100,"column":87},"end":{"row":100,"column":88},"action":"insert","lines":["\""]}],[{"start":{"row":100,"column":87},"end":{"row":100,"column":88},"action":"insert","lines":[" "]}],[{"start":{"row":100,"column":88},"end":{"row":100,"column":89},"action":"insert","lines":["+"]}],[{"start":{"row":100,"column":89},"end":{"row":100,"column":90},"action":"insert","lines":[" "]}],[{"start":{"row":100,"column":90},"end":{"row":100,"column":91},"action":"insert","lines":["+"]}],[{"start":{"row":100,"column":91},"end":{"row":100,"column":92},"action":"insert","lines":[" "]}],[{"start":{"row":100,"column":89},"end":{"row":100,"column":90},"action":"insert","lines":[" "]}],[{"start":{"row":100,"column":90},"end":{"row":100,"column":99},"action":"insert","lines":["funcArray"]}],[{"start":{"row":100,"column":99},"end":{"row":100,"column":101},"action":"insert","lines":["[]"]}],[{"start":{"row":100,"column":100},"end":{"row":100,"column":101},"action":"insert","lines":["1"]}],[{"start":{"row":100,"column":102},"end":{"row":100,"column":103},"action":"insert","lines":[" "]}],[{"start":{"row":100,"column":103},"end":{"row":100,"column":104},"action":"insert","lines":["|"]}],[{"start":{"row":100,"column":104},"end":{"row":100,"column":105},"action":"insert","lines":["|"]}],[{"start":{"row":100,"column":105},"end":{"row":100,"column":106},"action":"insert","lines":[" "]}],[{"start":{"row":100,"column":106},"end":{"row":100,"column":108},"action":"insert","lines":["''"]}],[{"start":{"row":100,"column":107},"end":{"row":100,"column":108},"action":"insert","lines":["t"]}],[{"start":{"row":100,"column":108},"end":{"row":100,"column":109},"action":"insert","lines":["h"]}],[{"start":{"row":100,"column":109},"end":{"row":100,"column":110},"action":"insert","lines":["i"]}],[{"start":{"row":100,"column":110},"end":{"row":100,"column":111},"action":"insert","lines":["s"]}],[{"start":{"row":100,"column":90},"end":{"row":100,"column":91},"action":"insert","lines":["("]}],[{"start":{"row":100,"column":113},"end":{"row":100,"column":114},"action":"insert","lines":[")"]}],[{"start":{"row":363,"column":17},"end":{"row":363,"column":18},"action":"remove","lines":[","]}],[{"start":{"row":363,"column":16},"end":{"row":363,"column":17},"action":"remove","lines":["}"]},{"start":{"row":363,"column":12},"end":{"row":363,"column":16},"action":"remove","lines":["    "]}],[{"start":{"row":363,"column":8},"end":{"row":363,"column":12},"action":"remove","lines":["    "]}],[{"start":{"row":363,"column":4},"end":{"row":363,"column":8},"action":"remove","lines":["    "]}],[{"start":{"row":363,"column":0},"end":{"row":363,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":362,"column":37},"end":{"row":363,"column":0},"action":"remove","lines":["",""]}]],"mark":-1,"position":100},"ace":{"folds":[],"scrolltop":1361,"scrollleft":0,"selection":{"start":{"row":149,"column":9},"end":{"row":149,"column":9},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1430708802000}