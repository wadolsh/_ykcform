{"changed":true,"filter":false,"title":"bridge.util.jp","tooltip":"/client/js/bridge.util.jp","value":"/**\n * choish\n */\n(function(){\n    var root = this;\n    var Bridge = root.Bridge;\n    \n    var dateStr = Bridge.dateStr = {\n        regexp: new RegExp('(y{1,4})|(MM)|(dd)|(HH)|(hh)|(mm)|(ss)|(S{1,3})|(E)', 'g'),\n        format: function(format, date) {\n            return format.replace(this.regexp, function(match, yyyy, MM, dd, HH, hh, mm, ss, SS, E, offset){\n                if (yyyy) {\n                    return date.getFullYear().toString().slice(-yyyy.length);\n                } else if (MM) {\n                    return ('0' + (date.getMonth() + 1)).slice(-2);\n                } else if (dd) {\n                    return ('0' + date.getDate()).slice(-2);\n                } else if (HH) {\n                    return ('0' + date.getHours()).slice(-2);\n                } else if (hh) {\n                    return ('0' + date.getHours()).slice(-2);\n                } else if (mm) {\n                    return ('0' + date.getMinutes()).slice(-2);\n                } else if (ss) {\n                    return ('0' + date.getSeconds()).slice(-2);\n                } else if (SS) {\n                    return date.getMilliseconds().toString().slice(0, SS.length);\n                } else if (E) {\n                    return date.getDay();\n                }\n            });\n        },\n        getNowDate : function(format) {\n            return this.format(format || 'yyyy-MM-dd HH:mm:ss', new Date());\n        }\n    }\n}).call(this);","undoManager":{"mark":-1,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":36,"column":14},"action":"insert","lines":["/**"," * choish"," */","(function(){","    var root = this;","    var Bridge = root.Bridge;","    ","    var dateStr = Bridge.dateStr = {","        regexp: new RegExp('(y{1,4})|(MM)|(dd)|(HH)|(hh)|(mm)|(ss)|(S{1,3})|(E)', 'g'),","        format: function(format, date) {","            return format.replace(this.regexp, function(match, yyyy, MM, dd, HH, hh, mm, ss, SS, E, offset){","                if (yyyy) {","                    return date.getFullYear().toString().slice(-yyyy.length);","                } else if (MM) {","                    return ('0' + (date.getMonth() + 1)).slice(-2);","                } else if (dd) {","                    return ('0' + date.getDate()).slice(-2);","                } else if (HH) {","                    return ('0' + date.getHours()).slice(-2);","                } else if (hh) {","                    return ('0' + date.getHours()).slice(-2);","                } else if (mm) {","                    return ('0' + date.getMinutes()).slice(-2);","                } else if (ss) {","                    return ('0' + date.getSeconds()).slice(-2);","                } else if (SS) {","                    return date.getMilliseconds().toString().slice(0, SS.length);","                } else if (E) {","                    return date.getDay();","                }","            });","        },","        getNowDate : function(format) {","            return this.format(format || 'yyyy-MM-dd HH:mm:ss', new Date());","        }","    }","}).call(this);"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":10,"column":5},"end":{"row":10,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1430708875303}